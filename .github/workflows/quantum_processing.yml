name: Quantum BDI Processing & Security Guard

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '*/15 * * * *'

jobs:
  security-scan:
    name: Code Guardian Security Scan
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: python github_actions_quantum/check_secrets.py
      - name: Report Status to Vercel
        if: always() # Selalu lapor, baik sukses maupun gagal
        uses: d-app-tech/curl-action@v1.0.1
        with:
          url: ${{ secrets.VERCEL_URL }}/api/status
          method: POST
          headers: 'Content-Type: application/json'
          data: '{"component": "code_guardian", "status": "${{ job.status }}", "data": {"last_run": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"} }'

  run-quantum-pipeline:
    name: Execute Quantum BDI Pipeline
    needs: security-scan
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      # ... (semua langkah di sini tetap sama)
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with: { python-version: '3.11', cache: 'pip', cache-dependency-path: 'requirements.txt' }
      - run: pip install -r requirements.txt
      - id: belief_processing
        run: |
          python github_actions_quantum/quantum/belief_quantum.py
          # ... (dst)
      - id: desire_optimization
        run: |
          python github_actions_quantum/quantum/desire_quantum.py --belief-file ${{ steps.belief_processing.outputs.belief_output_path }}
          # ... (dst)
      - run: python github_actions_quantum/quantum/intention_quantum.py --desire-file ${{ steps.desire_optimization.outputs.desire_output_path }}
      - uses: actions/upload-artifact@v4
        with: { name: quantum-bdi-results, path: artifacts/ }
      - name: Report Status to Vercel
        if: always()
        uses: d-app-tech/curl-action@v1.0.1
        with:
          url: ${{ secrets.VERCEL_URL }}/api/status
          method: POST
          headers: 'Content-Type: application/json'
          data: '{"component": "quantum_pipeline", "status": "${{ job.status }}", "data": {"last_run": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"} }'

  # ... (Job Business Insight dan Evolution Chamber juga perlu ditambahkan 'Report Status to Vercel' dengan cara yang sama)
  
  self-healing-patrol:
    name: Self-Healing Patrol
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with: { python-version: '3.11' }
      - run: pip install requests
      - name: Run SelfHealingAgent Patrol
        env: { VERCEL_URL: ${{ secrets.VERCEL_URL }} }
        run: python github_actions_quantum/quantum/healing_protocol.py
      - name: Report Status to Vercel
        if: always()
        uses: d-app-tech/curl-action@v1.0.1
        with:
          url: ${{ secrets.VERCEL_URL }}/api/status
          method: POST
          headers: 'Content-Type: application/json'
          data: '{"component": "self_healing", "status": "${{ job.status }}", "data": {"last_run": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"} }'
